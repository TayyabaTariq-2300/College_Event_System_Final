@page "/admindashboard/delete-event"
@inject AppDbContext _context
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer

<h2>Delete Event</h2>

@if (events == null)
{
    <p>Loading events...</p>
}
else if (!events.Any())
{
    <p>No events available for deletion.</p>
}
else
{
    <table class="edit-event-table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Date</th>
                <th>Location</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var e in events)
            {
                <tr>
                    <td>@e.Title</td>
                    <td>@e.Date.ToShortDateString()</td>
                    <td>@e.Location</td>
                    <td>
                        <button class="btn-cancel" @onclick="() => ConfirmDelete(e.EventID)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (confirmDeleteId != null)
{
    <div class="modal-overlay">
        <div class="modal-content">
            <h3>Confirm Deletion</h3>
            <p>Are you sure you want to delete this event?</p>
            <div class="modal-buttons">
                <button class="btn-save" @onclick="DeleteEventFun">Yes, Delete</button>
                <button class="btn-cancel" @onclick="CancelDelete">Cancel</button>
            </div>
        </div>
    </div>
}


@code {
    private List<Event>? events;
    private int? confirmDeleteId = null;

    protected override async Task OnInitializedAsync()
    {
        events = await _context.Events.ToListAsync();
    }

    private void ConfirmDelete(int id)
    {
        confirmDeleteId = id;
    }

    private void CancelDelete()
    {
        confirmDeleteId = null;
    }

    private async Task DeleteEventFun()
    {
        if (confirmDeleteId != null)
        {
            var eventToDelete = await _context.Events.FindAsync(confirmDeleteId);
            if (eventToDelete != null)
            {
                _context.Events.Remove(eventToDelete);
                await _context.SaveChangesAsync();

                // Refresh event list
                events = await _context.Events.ToListAsync();
            }

            confirmDeleteId = null;
        }
    }
}
